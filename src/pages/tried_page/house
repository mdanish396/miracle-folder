<template>
  <div class="property-page">
    <!-- Banner Section -->
    <div class="banner">
      <img src="https://example.com/image.jpg" alt="Banner" class="banner-img" />
      <div class="property-details">
        <h1>Heston Hills (Gardens Esteem)</h1>
        <p>Gamuda Gardens, Sungai Buloh North</p>
        <div class="property-meta">
          <q-item>
            <q-item-section>
              <h3>Type</h3>
              <p>Superlink House, Semi-D</p>
            </q-item-section>
            <q-separator vertical />
            <q-item-section>
              <h3>From</h3>
              <p>TBC</p>
            </q-item-section>
            <q-separator vertical />
            <q-item-section>
              <h3>Status</h3>
              <p>Newly Launched</p>
            </q-item-section>
          </q-item>
        </div>
      </div>
    </div>

    <!-- Amenities Section -->
    <section class="amenities">
      <q-list>
        <q-expansion-item label="Education" icon="school" default-opened>
          <q-item>
            <q-item-section>
              <p>Beaconhouse Pre-School - 1.4km</p>
              <p>SJK (C) Kuang - 4.5km</p>
              <p>SJK (C) Kundang - 5.2km</p>
            </q-item-section>
          </q-item>
        </q-expansion-item>

        <q-expansion-item label="Entertainment" icon="theaters">
          <q-item>
            <q-item-section>
              <p>Nearby Parks - 2km</p>
              <p>Cinema Hall - 6km</p>
            </q-item-section>
          </q-item>
        </q-expansion-item>
      </q-list>
    </section>

    <!-- Gallery Section -->
    <section class="gallery">
      <h2>Gallery</h2>
      <div class="gallery-grid">
        <img v-for="(image, index) in galleryImages" :key="index" :src="image" alt="Gallery Image" />
      </div>
    </section>

    <!-- Floorplan Section -->
    <section class="floorplan">
      <h2>Floorplan</h2>
      <div class="floorplan-details">
        <q-card>
          <q-card-section>
            <div class="floorplan-meta">
              <p>4 Bedrooms</p>
              <p>4 Bathrooms</p>
              <p>2,197 sq.ft</p>
            </div>
          </q-card-section>
        </q-card>
      </div>
    </section>

    <!-- Location Section -->
    <section class="location">
      <h2>Location</h2>
      <q-card>
        <q-card-section>
          <p>Nearby Amenities Listed Above</p>
        </q-card-section>
      </q-card>
    </section>
  </div>
</template>


<script setup>
  // Gallery Images
  const galleryImages = [
    "https://example.com/image1.jpg",
    "https://example.com/image2.jpg",
    "https://example.com/image3.jpg"
  ];
  </script>


.property-page {
  font-family: Arial, sans-serif;
  background-color: #121212;
  color: #ffffff;
}

.banner {
  position: relative;
}

.banner-img {
  width: 100%;
  height: auto;
}

.property-details {
  padding: 20px;
}

.amenities,
.gallery,
.floorplan,
.location {
  padding: 20px;
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
}

.gallery-grid img {
  width: 100%;
  height: auto;
  border-radius: 8px;
}

.q-card {
  background-color: #1e1e1e;
  color: #ffffff;
}




















<template>
  <div class="property-page">
    <!-- Banner Section -->
    <div class="banner">
      <img src="https://example.com/image.jpg" alt="Banner" class="banner-img" />
      <div class="property-details">
        <h1>Heston Hills (Gardens Esteem)</h1>
        <p>Gamuda Gardens, Sungai Buloh North</p>
        <div class="property-meta">
          <q-item>
            <q-item-section>
              <h3>Type</h3>
              <p>Superlink House, Semi-D</p>
            </q-item-section>
            <q-separator vertical />
            <q-item-section>
              <h3>From</h3>
              <p>TBC</p>
            </q-item-section>
            <q-separator vertical />
            <q-item-section>
              <h3>Status</h3>
              <p>Newly Launched</p>
            </q-item-section>
          </q-item>
        </div>
      </div>
    </div>

    <!-- Amenities Section -->
    <section class="amenities">
      <q-list>
        <q-expansion-item label="Education" icon="school" default-opened>
          <q-item>
            <q-item-section>
              <p v-for="edu in educationAmenities" :key="edu.name">
                {{ edu.name }} - {{ edu.distance }}
              </p>
            </q-item-section>
          </q-item>
        </q-expansion-item>

        <q-expansion-item label="Entertainment" icon="theaters">
          <q-item>
            <q-item-section>
              <p v-for="ent in entertainmentAmenities" :key="ent.name">
                {{ ent.name }} - {{ ent.distance }}
              </p>
            </q-item-section>
          </q-item>
        </q-expansion-item>
      </q-list>
    </section>

    <!-- Gallery Section -->
    <section class="gallery">
      <h2>Gallery</h2>
      <div class="gallery-grid">
        <img v-for="(image, index) in galleryImages" :key="index" :src="image" alt="Gallery Image" />
      </div>
    </section>

    <!-- Floorplan Section -->
    <section class="floorplan">
      <h2>Floorplan</h2>
      <q-select
        v-model="selectedFloorplan"
        :options="floorplanOptions"
        label="Choose Floorplan Type"
        class="floorplan-select"
      />
      <div class="floorplan-details">
        <q-card v-if="currentFloorplan">
          <q-card-section>
            <h3>{{ currentFloorplan.type }}</h3>
            <p>{{ currentFloorplan.bedrooms }} Bedrooms</p>
            <p>{{ currentFloorplan.bathrooms }} Bathrooms</p>
            <p>{{ currentFloorplan.size }} sq.ft</p>
          </q-card-section>
        </q-card>
      </div>
    </section>

    <!-- Location Section -->
    <section class="location">
      <h2>Location</h2>
      <q-card>
        <q-card-section>
          <p>Nearby Amenities Listed Above</p>
        </q-card-section>
      </q-card>
    </section>
  </div>
</template>

<script setup>
// --- DATA ---

// Amenities Data
const educationAmenities = [
  { name: "Beaconhouse Pre-School", distance: "1.4km" },
  { name: "SJK (C) Kuang", distance: "4.5km" },
  { name: "SJK (C) Kundang", distance: "5.2km" },
  { name: "SK Seri Kundang", distance: "7.9km" },
  { name: "Straits International School", distance: "8.5km" },
];

const entertainmentAmenities = [
  { name: "Central Park", distance: "2.0km" },
  { name: "Cinema Hall", distance: "6.0km" },
];

// Gallery Images
const galleryImages = [
  "https://example.com/image1.jpg",
  "https://example.com/image2.jpg",
  "https://example.com/image3.jpg",
];

// Floorplan Data
const floorplans = [
  { type: "Semi-D Type A", bedrooms: 4, bathrooms: 4, size: 2197 },
  { type: "Semi-D Type B", bedrooms: 5, bathrooms: 5, size: 2500 },
  { type: "Semi-D Type C", bedrooms: 4, bathrooms: 3, size: 2000 },
  { type: "Superlink Type A", bedrooms: 3, bathrooms: 3, size: 1800 },
  { type: "Superlink Type B", bedrooms: 4, bathrooms: 4, size: 2200 },
];

// Floorplan Selection
import { ref, computed } from "vue";

const floorplanOptions = floorplans.map((item) => item.type);
const selectedFloorplan = ref(floorplanOptions[0]); // Default to first option

const currentFloorplan = computed(() => {
  return floorplans.find((item) => item.type === selectedFloorplan.value);
});
</script>

<style scoped>
.property-page {
  font-family: Arial, sans-serif;
  background-color: #121212;
  color: #ffffff;
}

.banner-img {
  width: 100%;
  height: auto;
}

.property-details {
  padding: 20px;
  text-align: center;
}

.amenities,
.gallery,
.floorplan,
.location {
  padding: 20px;
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 10px;
}

.gallery-grid img {
  width: 100%;
  height: auto;
  border-radius: 8px;
}

.floorplan-select {
  margin-bottom: 20px;
}

.q-card {
  background-color: #1e1e1e;
  color: #ffffff;
}
</style>










<template>
  <q-page>
    <div class="property-page">
      <!-- Loop through each property in 'name' -->
      <div v-for="(property, index) in name" :key="property.id" class="property-section">
        <!-- Hero Section -->
        <div class="hero-section">
          <img :src="properties[property.name][0].image" alt="Property Image" class="hero-image" />
          <div class="property-header">
            <h1>{{ property.name }}</h1>
            <h3>{{ properties[property.name][0].type }} - {{ properties[property.name][0].price }}</h3>
            <p>{{ properties[property.name][0].location }}</p>
          </div>
        </div>

        <!-- Features Section -->
        <div class="features-section">
          <h2>Features</h2>
          <ul>
            <li v-for="(feature, i) in properties[property.name][0].features" :key="i">
              {{ feature }}
            </li>
          </ul>
        </div>

        <!-- Description -->
        <div class="description-section">
          <p>{{ properties[property.name][0].description }}</p>
        </div>

        <!-- Gallery -->
        <div class="gallery-section">
          <h2>Gallery</h2>
          <div class="gallery">
            <img
              v-for="(image, idx) in properties[property.name][0].gallery"
              :key="idx"
              :src="image"
              alt="Gallery Image"
            />
          </div>
        </div>

        <!-- Floorplan -->
        <div class="floorplan-section">
          <h2>Floor Plans</h2>
          <div v-for="(plans, planType) in floorplan[property.name][0]" :key="planType" class="floorplan-item">
            <h3>{{ planType }}</h3>
            <p>Area: {{ plans[0].area }}</p>
            <p>Bedrooms: {{ plans[0].bedroom }}</p>
            <p>Bathrooms: {{ plans[0].bathroom }}</p>
          </div>
        </div>

        <!-- Education Amenities -->
        <div class="amenities-section">
          <h2>Nearby Education</h2>
          <ul>
            <li v-for="(amenity, idx) in educationAmenities[property.name]" :key="idx">
              {{ amenity.name }} - {{ amenity.distance }}
            </li>
          </ul>
        </div>

        <!-- Entertainment Amenities -->
        <div class="amenities-section">
          <h2>Nearby Entertainment</h2>
          <ul>
            <li v-for="(entertainment, idx) in entertainmentAmenities[property.name]" :key="idx">
              {{ entertainment.name }} - {{ entertainment.distance }}
            </li>
          </ul>
        </div>
      </div>
    </div>
  </q-page>
</template>

<script setup>
import { ref } from "vue";

// Names for each property
const name = [
  { id: 1, name: "Monarc Homes" },
  { id: 2, name: "Casa Hill" },
  { id: 3, name: "Izona" },
];

// Properties Data
const properties = {
  "Monarc Homes": [
    {
      name: "Monarc Homes",
      location: "Casa Hill",
      type: "Double Storey",
      price: "RM500,000",
      image: "https://picsum.photos/200/300",
      features: ["Exclusive Amenities", "Spacious Homes", "Green Spaces"],
      description: `The Camellia, your home at Wetlands Estates, the private enclave in Gamuda Cove.`,
      gallery: [
        "https://picsum.photos/200/300",
        "https://picsum.photos/200/300",
        "https://picsum.photos/200/300",
      ],
    },
  ],
  "Casa Hill": [
    {
      name: "Casa Hill",
      location: "Casa Hill",
      type: "Bungalow",
      price: "RM600,000",
      image: "https://picsum.photos/200/300",
      features: ["Exclusive Amenities", "Spacious Homes", "Green Spaces"],
      description: `The Camellia, your home at Wetlands Estates, the private enclave in Gamuda Cove.`,
      gallery: [
        "https://picsum.photos/200/300",
        "https://picsum.photos/200/300",
        "https://picsum.photos/200/300",
      ],
    },
  ],
  Izona: [
    {
      name: "Izona",
      location: "Bukit Bahagia",
      type: "2 Storey Terrace",
      price: "RM700,000",
      image: "https://picsum.photos/200/300",
      features: ["Exclusive Amenities", "Spacious Homes", "Green Spaces"],
      description: `The Camellia, your home at Wetlands Estates, the private enclave in Gamuda Cove.`,
      gallery: [
        "https://picsum.photos/200/300",
        "https://picsum.photos/200/300",
        "https://picsum.photos/200/300",
      ],
    },
  ],
};

// Floorplan Data
const floorplan = {
  "Monarc Homes": [
    {
      "2 Storey Semi-D A": [{ area: "1,800 sqft", bedroom: 4, bathroom: 3 }],
      "2 Storey Semi-D B": [{ area: "2,800 sqft", bedroom: 5, bathroom: 4 }],
    },
  ],
  "Casa Hill": [
    {
      "Bungalow A": [{ area: "1,800 sqft", bedroom: 4, bathroom: 3 }],
      "Bungalow B": [{ area: "2,800 sqft", bedroom: 5, bathroom: 4 }],
    },
  ],
  Izona: [
    {
      "2 Storey Terrace A": [{ area: "1,800 sqft", bedroom: 4, bathroom: 3 }],
      "2 Storey Terrace B": [{ area: "2,800 sqft", bedroom: 5, bathroom: 4 }],
    },
  ],
};

// Education Amenities
const educationAmenities = {
  "Monarc Homes": [{ name: "Beaconhouse Pre-School", distance: "1.4km" }],
  "Casa Hill": [{ name: "SJK (C) Kuang", distance: "4.5km" }],
  Izona: [{ name: "SK Seri Kundang", distance: "7.9km" }],
};

// Entertainment Amenities
const entertainmentAmenities = {
  "Monarc Homes": [{ name: "Central Park", distance: "2.0km" },
                  { name: "Central Park", distance: "2.0km" }
  ],
  "Casa Hill": [{ name: "Cinema Hall", distance: "6.0km" }],
  Izona: [{ name: "Central Park", distance: "2.0km" }],
};
</script>

<style scoped>
.property-page {
  font-family: Arial, sans-serif;
  color: #333;
}

.hero-section {
  position: relative;
  margin-bottom: 20px;
}

.hero-image {
  width: 100%;
  height: auto;
  border-radius: 8px;
}

.features-section,
.description-section,
.gallery-section,
.floorplan-section,
.amenities-section {
  margin: 20px 0;
}

.gallery img {
  margin: 5px;
  border-radius: 8px;
  width: 150px;
  height: 100px;
}
</style>


































<template>
  <q-page>
    <div class="property-page">
      <!-- Loop through each property -->
      <div v-for="property in properties" :key="property.id" class="property-section">

        <!-- Hero Section -->
        <div class="hero-section">
          <img :src="property.image" alt="Property Image" class="hero-image" />
          <div class="property-header">
            <h1>{{ property.name }}</h1>
            <h3>{{ property.type }} - {{ property.price }}</h3>
            <p>{{ property.location }}</p>
          </div>
        </div>

        <!-- Features Section -->
        <div class="features-section">
          <h2>Features</h2>
          <ul>
            <li v-for="feature in property.features" :key="feature">
              {{ feature }}
            </li>
          </ul>
        </div>

        <!-- Description -->
        <div class="description-section">
          <p>{{ property.description }}</p>
        </div>

        <!-- Gallery Section -->
        <div class="gallery-section">
          <h2>Gallery</h2>
          <div class="gallery">
            <img v-for="(image, idx) in property.gallery" :key="idx" :src="image" alt="Gallery Image" />
          </div>
        </div>

        <!-- Floor Plan -->
        <div class="floorplan-section">
          <h2>Floor Plans</h2>
          <div v-for="(plans, planType) in floorplan[property.name][0]" :key="planType" class="floorplan-item">
            <h3>{{ planType }}</h3>
            <p>Area: {{ plans[0].area }}</p>
            <p>Bedrooms: {{ plans[0].bedroom }}</p>
            <p>Bathrooms: {{ plans[0].bathroom }}</p>
          </div>
        </div>

        <!-- Education Amenities -->
        <div class="amenities-section">
          <h2>Nearby Education</h2>
          <ul>
            <li v-for="(amenity, idx) in educationAmenities[property.name]" :key="idx">
              {{ amenity.name }} - {{ amenity.distance }}
            </li>
          </ul>
        </div>

        <!-- Entertainment Amenities -->
        <div class="amenities-section">
          <h2>Nearby Entertainment</h2>
          <ul>
            <li v-for="(entertainment, idx) in entertainmentAmenities[property.name]" :key="idx">
              {{ entertainment.name }} - {{ entertainment.distance }}
            </li>
          </ul>
        </div>

      </div>
    </div>
  </q-page>
</template>

<script setup>
const properties = [
  {
    id: 1,
    name: 'Monarc Homes',
    location: 'Casa Hill',
    type: 'Double Storey',
    price: 'RM500,000',
    image: 'https://picsum.photos/200/300',
    features: ['Exclusive Amenities', 'Spacious Homes', 'Green Spaces'],
    description: `The Camellia, your home at Wetlands Estates, the
    private enclave in Gamuda Cove.`,
    gallery: ['https://picsum.photos/200/300',
      'https://picsum.photos/200/300',
      'https://picsum.photos/200/300']
  }
]

const floorplan = {
  'Monarc Homes': [
    {
      '2 Storey Semi-D A': [{ area: '1,800 sqft', bedroom: 4, bathroom: 3 }],
      '2 Storey Semi-D B': [{ area: '2,800 sqft', bedroom: 5, bathroom: 4 }]
    }
  ]
}

const educationAmenities = {
  'Monarc Homes': [{ name: 'Beaconhouse Pre-School', distance: '1.4km' }]
}

const entertainmentAmenities = {
  'Monarc Homes': [{ name: 'Central Park', distance: '2.0km' }]
}
</script>

<style scoped>
.property-page {
  font-family: Arial, sans-serif;
  color: #333;
}

.hero-section {
  position: relative;
  margin-bottom: 20px;
}

.hero-image {
  width: 100%;
  height: auto;
  border-radius: 8px;
}

.features-section,
.description-section,
.gallery-section,
.floorplan-section,
.amenities-section {
  margin: 20px 0;
}

.gallery img {
  margin: 5px;
  border-radius: 8px;
  width: 150px;
  height: 100px;
}

.floorplan-item h3 {
  margin: 10px 0 5px;
}
</style>








<template>
  <div class="property-item">
    <!-- Section Title -->
    <h4>Type</h4>

    <!-- Truncated Text with Tooltip -->
    <p class="truncated-text">
      {{ property.type }}
      <q-tooltip>
        {{ property.type }}
      </q-tooltip>
    </p>
  </div>
</template>

<script>
export default {
  name: "PropertyItem",
  props: {
    property: {
      type: Object,
      required: true
    }
  }
};
</script>

<style scoped>
.property-item {
  margin-bottom: 16px; /* Adjust spacing between items */
}

.truncated-text {
  font-size: 14px;         /* Custom font size */
  line-height: 18px;       /* Adjust line spacing */
  white-space: nowrap;     /* Prevent wrapping */
  overflow: hidden;        /* Hide overflow */
  text-overflow: ellipsis; /* Add ellipsis when text overflows */
  max-width: 200px;        /* Set max-width for truncation */
  font-weight: normal;     /* Adjust font weight */
  cursor: pointer;         /* Indicates interactivity for tooltip */
}
</style>






<template>
  <div class="property-button-container">
    <!-- Button 1 -->
    <q-btn
      stack
      flat
      class="property-btn"
    >
      <img src="src/assets/floor-plan.jpg" class="icon-2" />
      <span class="text-btn">FLOOR PLANS</span>
    </q-btn>

    <!-- Button 2 (beside the first button) -->
    <q-btn
      stack
      flat
      class="property-btn"
    >
      <img src="src/assets/another-icon.jpg" class="icon-2" />
      <span class="text-btn">BROCHURE</span>
    </q-btn>
  </div>
</template>

<script>
export default {
  name: "PropertyButtons"
};
</script>

<style scoped>
.property-button-container {
  display: flex; /* Align buttons horizontally */
  gap: 15px; /* Space between buttons */
}

.icon-2 {
  width: 35px;
  filter: brightness(0); /* Default black icon */
  transition: filter 0.3s ease; /* Smooth transition for hover effect */
}

.text-btn {
  font-size: 14px;
  line-height: 21px;
  padding-top: 10px;
}

.property-btn {
  background-color: transparent;
  border: 2px solid #08463c;
  color: #000000;
  font-weight: bold;
  padding: 10px 20px;
  border-radius: 0;
  transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
}

.property-btn:hover {
  background-color: #08463c;
  color: white;
  transform: translateY(-3px);
}

.property-btn:hover .icon-2 {
  filter: brightness(100); /* Change icon to white on hover */
}
</style>
<template>
  <div class="property-button-container">
    <!-- Button 1 -->
    <q-btn stack flat class="property-btn">
      <img
        :src="blackImage"
        @mouseover="toggleImage('white')"
        @mouseleave="toggleImage('black')"
        class="icon-2"
      />
      <span class="text-btn">FLOOR PLANS</span>
    </q-btn>

    <!-- Button 2 -->
    <q-btn stack flat class="property-btn">
      <img
        :src="blackImage2"
        @mouseover="toggleImage2('white')"
        @mouseleave="toggleImage2('black')"
        class="icon-2"
      />
      <span class="text-btn">BROCHURE</span>
    </q-btn>
  </div>
</template>

<script>
export default {
  name: "PropertyButtons",
  data() {
    return {
      blackImage: require("src/assets/floor-plan-black.jpg"), // Default black image
      whiteImage: require("src/assets/floor-plan-white.jpg"), // White image
      blackImage2: require("src/assets/brochure-black.jpg"),  // Default black image for button 2
      whiteImage2: require("src/assets/brochure-white.jpg"),  // White image for button 2
    };
  },
  methods: {
    toggleImage(color) {
      this.blackImage =
        color === "white"
          ? require("src/assets/floor-plan-white.jpg")
          : require("src/assets/floor-plan-black.jpg");
    },
    toggleImage2(color) {
      this.blackImage2 =
        color === "white"
          ? require("src/assets/brochure-white.jpg")
          : require("src/assets/brochure-black.jpg");
    },
  },
};
</script>

<style scoped>
.property-button-container {
  display: flex; /* Align buttons horizontally */
  gap: 15px; /* Space between buttons */
}

.icon-2 {
  width: 35px; /* Set icon size */
  height: auto;
  transition: opacity 0.3s ease; /* Smooth transition */
}

.text-btn {
  font-size: 14px;
  line-height: 21px;
  padding-top: 10px;
}

.property-btn {
  background-color: transparent;
  border: 2px solid #08463c;
  color: #000000;
  font-weight: bold;
  padding: 10px 20px;
  border-radius: 0;
  transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
}

.property-btn:hover {
  background-color: #08463c;
  color: white;
  transform: translateY(-3px);
}
</style>






<template>
  <div class="property-button-container">
    <!-- Button 1 -->
    <q-btn stack flat class="property-btn">
      <img
        :src="iconImage"
        @mouseover="toggleImage('white')"
        @mouseleave="toggleImage('black')"
        class="icon-2"
      />
      <span class="text-btn">FLOOR PLANS</span>
    </q-btn>

    <!-- Button 2 -->
    <q-btn stack flat class="property-btn">
      <img
        :src="iconImage2"
        @mouseover="toggleImage2('white')"
        @mouseleave="toggleImage2('black')"
        class="icon-2"
      />
      <span class="text-btn">BROCHURE</span>
    </q-btn>
  </div>
</template>

<script setup>
import { ref } from 'vue';

// Define reactive variables for images
const blackImage = require('src/assets/floor-plan-black.jpg');
const whiteImage = require('src/assets/floor-plan-white.jpg');
const blackImage2 = require('src/assets/brochure-black.jpg');
const whiteImage2 = require('src/assets/brochure-white.jpg');

// Reactive variables to hold current image sources
const iconImage = ref(blackImage);
const iconImage2 = ref(blackImage2);

// Methods to change images on hover
function toggleImage(color) {
  iconImage.value = color === 'white' ? whiteImage : blackImage;
}

function toggleImage2(color) {
  iconImage2.value = color === 'white' ? whiteImage2 : blackImage2;
}
</script>

<style scoped>
.property-button-container {
  display: flex; /* Align buttons horizontally */
  gap: 15px; /* Space between buttons */
}

.icon-2 {
  width: 35px; /* Set icon size */
  height: auto;
  transition: opacity 0.3s ease; /* Smooth transition */
}

.text-btn {
  font-size: 14px;
  line-height: 21px;
  padding-top: 10px;
}

.property-btn {
  background-color: transparent;
  border: 2px solid #08463c;
  color: #000000;
  font-weight: bold;
  padding: 10px 20px;
  border-radius: 0;
  transition: background-color 0.3s ease, color 0.3s ease, transform 0.3s ease;
}

.property-btn:hover {
  background-color: #08463c;
  color: white;
  transform: translateY(-3px);
}
</style>






<template>
  <div class="floorplan-section">
    <h2>Floor Plans</h2>

    <!-- Dropdown to choose a plan -->
    <select v-model="selectedPlan">
      <option v-for="(plans, planType) in floorplan[property.name][0]" :key="planType" :value="planType">
        {{ planType }}
      </option>
    </select>

    <!-- Display floor plan details based on selected plan -->
    <div v-if="selectedPlan">
      <div class="floorplan-item" v-for="(plans, planType) in floorplan[property.name][0]" :key="planType">
        <div v-if="selectedPlan === planType">
          <h3>{{ planType }}</h3>
          <p>Area: {{ plans[0].area }}</p>
          <p>Bedrooms: {{ plans[0].bedroom }}</p>
          <p>Bathrooms: {{ plans[0].bathroom }}</p>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue';

const property = { name: 'Monarc Homes' };  // Example property name
const floorplan = {
  'Monarc Homes': [
    {
      '2 Storey Semi-D A': [{ area: '1,800 sqft', bedroom: 4, bathroom: 3 }],
      '2 Storey Semi-D B': [{ area: '2,800 sqft', bedroom: 5, bathroom: 4 }],
    },
  ],
};

// Default selected plan
const selectedPlan = ref('2 Storey Semi-D B');
</script>

<style scoped>
.floorplan-section {
  padding: 20px;
}

.floorplan-item {
  margin-top: 15px;
}

select {
  padding: 5px;
  margin-bottom: 15px;
}
</style>






<template>
  <!-- Floor Plan Section -->
  <div class="floorplan-section">
    <h2 class="section-title">Floorplan</h2>
    <div class="floorplan-container">
      <!-- Header Section -->
      <div class="floorplan-header">
        <div class="plan-select">
          <select v-model="selectedPlan" class="dropdown">
            <option
              v-for="(plans, planType) in floorplan[property.name][0]"
              :key="planType"
              :value="planType"
            >
              {{ planType }}
            </option>
          </select>
        </div>
        <div class="plan-price">
          Price From <span class="price">RM1,200,000</span>
        </div>
      </div>

      <!-- Details Section -->
      <div class="floorplan-details">
        <div
          class="floorplan-info"
          v-for="(plans, planType) in floorplan[property.name][0]"
          :key="planType"
        >
          <div v-if="selectedPlan === planType" class="details-grid">
            <!-- Bedrooms -->
            <div class="details-item">
              <img src="src/assets/bed-icon.png" alt="Bedrooms" class="icon" />
              <p>{{ plans[0].bedroom }} Bedrooms</p>
            </div>
            <!-- Bathrooms -->
            <div class="details-item">
              <img src="src/assets/bath-icon.png" alt="Bathrooms" class="icon" />
              <p>{{ plans[0].bathroom }} Bathrooms</p>
            </div>
            <!-- Area -->
            <div class="details-item">
              <img src="src/assets/area-icon.png" alt="Area" class="icon" />
              <p>{{ plans[0].area }}</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Buttons Section -->
      <div class="floorplan-buttons">
        <button class="btn download-btn">
          <img src="src/assets/download-icon.png" alt="Download" />
          Download Brochure
        </button>
        <button class="btn view-btn">
          <img src="src/assets/view-icon.png" alt="View" />
          View Floorplan
        </button>
      </div>
    </div>
  </div>
</template>

<script setup>
  import { ref } from 'vue';

  // Dummy property data
  const property = { name: 'Monarc Homes' };
  const floorplan = {
    'Monarc Homes': [
      {
        '2 Storey Semi-D A': [{ area: '2,309 - 2,535 sq.ft.', bedroom: 4, bathroom: 4 }],
        '2 Storey Semi-D B': [{ area: '2,800 sqft', bedroom: 5, bathroom: 4 }],
      },
    ],
  };

  // Default selected plan
  const selectedPlan = ref('2 Storey Semi-D A');
  </script>

.floorplan-section {
  padding: 20px;
  font-family: Arial, sans-serif;
  text-align: center;
}

.section-title {
  font-size: 32px;
  margin-bottom: 10px;
  font-weight: bold;
}

.floorplan-container {
  background-color: #f9f9f9;
  border: 1px solid #ddd;
  padding: 20px;
}

.floorplan-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #0a223d;
  color: white;
  padding: 15px;
  border-radius: 4px;
}

.plan-select .dropdown {
  padding: 5px;
  font-size: 17px;
}

.plan-price .price {
  font-weight: bold;
  font-size: 17px;
}

.floorplan-details {
  display: flex;
  justify-content: space-around;
  margin-top: 20px;
}

.details-grid {
  display: flex;
  justify-content: center;
  gap: 20px;
}

.details-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: #fff;
  padding: 20px;
  border: 1px solid #ddd;
  border-radius: 4px;
  width: 150px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.details-item img.icon {
  width: 30px;
  margin-bottom: 10px;
}

.floorplan-buttons {
  margin-top: 20px;
  display: flex;
  justify-content: center;
  gap: 20px;
}

.btn {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 10px 20px;
  border: 1px solid #ccc;
  background: #fff;
  cursor: pointer;
  font-size: 14px;
  font-weight: bold;
}

.download-btn {
  border: 2px solid #0a223d;
  color: #0a223d;
}

.view-btn {
  border: 2px solid #dd3333;
  color: #dd3333;
}

.btn img {
  width: 16px;
  height: 16px;
}

.btn:hover {
  background-color: #0a223d;
  color: white;
}

.download-btn:hover img,
.view-btn:hover img {
  filter: invert(1);
}


<select v-model="selectedPlan" class="floorplan-dropdown">
  <option
    v-for="(plans, planType) in floorplan[property.name][0]"
    :key="planType"
    :value="planType"
  >
    {{ planType }}
  </option>
</select>


<template>
  <div class="floorplan-section">
    <h2 class="section-title">Floorplan</h2>
    <q-select
      v-model="selectedPlan"
      :options="planOptions"
      label="Select Plan"
      popup-content-class="custom-dropdown"
      dense
      outlined
      class="custom-select"
    />
  </div>
</template>



.custom-dropdown {
  background-color: #08463c; /* Dropdown background */
  color: white;
}

.custom-dropdown .q-item {
  color: white; /* Default text color */
}

.custom-dropdown .q-item:hover {
  background-color: white; /* Hover background */
  color: black; /* Hover text */
}

.custom-select {
  width: 300px; /* Adjust width */
}



<style scoped>
  /* Container for dropdown */
  .custom-dropdown-container {
    font-family: Arial, sans-serif;
    margin: 20px 0;
  }

  /* Label */
  .dropdown-label {
    display: block;
    margin-bottom: 8px;
    color: #08463c;
    font-weight: bold;
  }

  /* Wrapper to position custom arrow */
  .dropdown-wrapper {
    position: relative;
    display: inline-block;
    width: 100%;
  }

  /* Custom select styling */
  .custom-select {
    appearance: none; /* Remove default OS styling */
    -webkit-appearance: none;
    -moz-appearance: none;
    background-color: #08463c; /* Background color */
    color: white; /* Text color */
    border: 2px solid #08463c;
    padding: 10px 16px;
    font-size: 16px;
    border-radius: 5px;
    width: 100%;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  /* Dropdown hover effect */
  .custom-select:hover {
    background-color: #0a5b4d; /* Slightly darker green */
  }

  /* Add custom dropdown arrow */
  .dropdown-wrapper::after {
    content: '\25BC'; /* Unicode for a down arrow */
    position: absolute;
    top: 50%;
    right: 15px;
    transform: translateY(-50%);
    color: white;
    pointer-events: none; /* Make sure it's not clickable */
    font-size: 14px;
  }

  /* Styling the options */
  .custom-select option {
    background-color: white; /* Default background */
    color: black; /* Text color */
    padding: 8px;
    transition: background-color 0.3s ease, color 0.3s ease;
  }

  /* Hover effect for options */
  .custom-select option:hover {
    background-color: #08463c;
    color: white;
  }

  /* Floorplan details section */
  .floorplan-details {
    margin-top: 20px;
    padding: 10px;
    border: 1px solid #08463c;
    background-color: #f9f9f9;
    border-radius: 5px;
  }

  .floorplan-details p {
    margin: 5px 0;
    color: #333;
  }
  </style>
